function [w, x, y] = grooves ( N, TOL, Nmax, omega )x = linspace ( 0, 0.08, 2*N+1 );y = linspace ( 0, 0.08, 2*N+1 );h = 0.08/N;hsq = h*h;w = zeros ( 2*N+1, 2*N+1 );for i = 1 : 2*N+1	w(i,1) = 20;end;for j = N+1 : 2*N+1    w(j-N,j) = 200;end;for i = N+2 : 2*N+1    w(i,2*N+1) = 200;end;fmat = zeros ( 2*N+1, 2*N+1 );for its = 1 : Nmax    res_norm = 0;	for j = 2 : N		new = ( 1 - omega ) * w(1,j) + ( omega / 4 ) * (  2*w(2,j) + w(1,j-1) + w(1,j+1) - fmat(1,j) );		res = w(1,j) - new;		w(1,j) = new;		if ( abs ( res ) > res_norm ) res_norm = abs(res); end;			    for i = 2 : 2*N		    new = ( 1 - omega ) * w(i,j) + ( omega / 4 ) * ( w(i-1,j) + w(i+1,j) + w(i,j-1) + w(i,j+1) - fmat(i,j) );			res = w(i,j) - new;			w(i,j) = new;			if ( abs ( res ) > res_norm ) res_norm = abs(res); end;		end;				new = ( 1 - omega ) * w(2*N+1,j) + ( omega / 4 ) * ( 2*w(2*N,j) + w(2*N+1,j-1) + w(2*N+1,j+1) - fmat(2*N+1,j) );		res = w(2*N+1,j) - new;		w(2*N+1,j) = new;		if ( abs ( res ) > res_norm ) res_norm = abs(res); end;	end;		for j = N+1 : 2*N	    for i = j-N+1 : 2*N		    new = ( 1 - omega ) * w(i,j) + ( omega / 4 ) * ( w(i-1,j) + w(i+1,j) + w(i,j-1) + w(i,j+1) - fmat(i,j) );			res = w(i,j) - new;			w(i,j) = new;			if ( abs ( res ) > res_norm ) res_norm = abs(res); end;		end;				new = ( 1 - omega ) * w(2*N+1,j) + ( omega / 4 ) * ( 2*w(2*N,j) + w(2*N+1,j-1) + w(2*N+1,j+1) - fmat(2*N+1,j) );		res = w(2*N+1,j) - new;		w(2*N+1,j) = new;		if ( abs ( res ) > res_norm ) res_norm = abs(res); end;	end;		if ( res_norm < TOL ) disp(its); return; end;end; 	   