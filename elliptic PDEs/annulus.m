function [w, r, t] = annulus ( N, M, TOL, Nmax, omega )r = linspace ( 0.5, 2, N+1 );t = linspace ( 0, 2*pi, M+1 );dr = 1.5/N;dt = (2*pi)/M;dr2 = dr * dr;lambda = dr2/(dt*dt)./(r.*r);w = zeros ( N+1, M+1 );for j = 1:M    w(1,j) = 20;end;fmat = -dr2 * ones ( N+1, M );for its = 1 : Nmax    res_norm = 0;	for i = 2 : N	    res = fmat(i,1) - ( ( 1 - dr / (2*r(i)) ) * w(i-1,1) + ( 1 + dr / (2*r(i)) ) * w(i+1,1) + lambda(i) * w(i,M) + lambda(i) * w(i,2) - 2 * ( 1 + lambda(i) ) * w(i,1) );		w(i,1) = w(i,1) - omega * res/ ( 2 * ( 1 + lambda(i) ) );		if ( abs ( res ) > res_norm ) res_norm = abs(res); end;	    for j = 2 : M-1		    res = fmat(i,j) - ( ( 1 - dr / (2*r(i)) ) * w(i-1,j) + ( 1 + dr / (2*r(i)) ) * w(i+1,j) + lambda(i) * w(i,j-1) + lambda(i) * w(i,j+1) - 2 * ( 1 + lambda(i) ) * w(i,j) );			w(i,j) = w(i,j) - omega * res/ ( 2 * ( 1 + lambda(i) ) );			if ( abs ( res ) > res_norm ) res_norm = abs(res); end;		end;		res = fmat(i,M) - ( ( 1 - dr / (2*r(i)) ) * w(i-1,M) + ( 1 + dr / (2*r(i)) ) * w(i+1,M) + lambda(i) * w(i,M-1) + lambda(i) * w(i,1) - 2 * ( 1 + lambda(i) ) * w(i,M) );	    w(i,M) = w(i,M) - omega * res/ ( 2 * ( 1 + lambda(i) ) );	    if ( abs ( res ) > res_norm ) res_norm = abs(res); end;	end;		res = fmat(N+1,1) - ( 2 * w(N,1) + lambda(N+1) * w(N+1,M) + lambda(N+1) * w(N+1,2) - 2 * ( 1 + lambda(N+1) + ( dr + dr2/(2*r(N+1)) ) * ( 1 + 0.5 * cos(3*t(1)) ) ) * w(N+1,1) );	w(N+1,1) = w(N+1,1) - omega * res/ ( 2 * ( 1 + lambda(N+1) + ( dr + dr2/(2*r(N+1)) ) * ( 1 + 0.5 * cos(3*t(1)) ) ) );	if ( abs ( res ) > res_norm ) res_norm = abs(res); end;	for j = 2 : M-1	    res = fmat(N+1,j) - ( 2 * w(N,j) + lambda(N+1) * w(N+1,j-1) + lambda(N+1) * w(N+1,j+1) - 2 * ( 1 + lambda(N+1) + ( dr + dr2/(2*r(N+1)) ) * ( 1 + 0.5 * cos(3*t(j)) ) ) * w(N+1,j) );	    w(N+1,j) = w(N+1,j) - omega * res/ ( 2 * ( 1 + lambda(N+1) + ( dr + dr2/(2*r(N+1)) ) * ( 1 + 0.5 * cos(3*t(j)) ) ) );		if ( abs ( res ) > res_norm ) res_norm = abs(res); end;	end;	res = fmat(N+1,M) - ( 2 * w(N,M) + lambda(N+1) * w(N+1,M-1) + lambda(N+1) * w(N+1,1) - 2 * ( 1 + lambda(N+1) + ( dr + dr2/(2*r(N+1)) ) * ( 1 + 0.5 * cos(3*t(M)) ) ) * w(N+1,M) );	w(N+1,M) = w(N+1,M) - omega * res/ ( 2 * ( 1 + lambda(N+1) + ( dr + dr2/(2*r(N+1)) ) * ( 1 + 0.5 * cos(3*t(M)) ) ) );	if ( abs ( res ) > res_norm ) res_norm = abs(res); end;			if ( res_norm < dr2*TOL ) disp(its); w(:,M+1) = w(:,1); return; end;end; 	   