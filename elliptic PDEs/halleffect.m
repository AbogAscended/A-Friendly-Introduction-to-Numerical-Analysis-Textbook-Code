function [w, x, y, rn] = halleffect ( a, b, N, c, d, M, TOL, Nmax, omega )x = linspace ( a, b, N+1 );y = linspace ( c, d, M+1 );h = (b-a)/N;hsq = h*h;lambda = 0.5;if ( nargout > 3 ) rn = zeros ( 1, Nmax ); end;w = zeros ( N+1, M+1 );for i = 1 : N+1    w(i,  1) = -1.0;    w(i,M+1) = 1.0;end;fmat = zeros ( N+1, M+1 );for its = 1 : Nmax    res_norm = 0;	for j = 2 : M	    new = ( 1 - omega ) * w(1,j) + ( omega / 4 ) * ( 2*w(2,j) + ( 1 + lambda ) * w(1,j-1) + ( 1 - lambda ) * w(1,j+1) - fmat(1,j) );        res = w(1,j) - new;	    w(1,j) = new;		if ( abs ( res ) > res_norm ) res_norm = abs(res); end;	    for i = 2 : N		    new = ( 1 - omega ) * w(i,j) + ( omega / 4 ) * ( w(i-1,j) + w(i+1,j) + w(i,j-1) + w(i,j+1) - fmat(i,j) );            res = w(i,j) - new;			w(i,j) = new;			if ( abs ( res ) > res_norm ) res_norm = abs(res); end;		end;		new = ( 1 - omega ) * w(N+1,j) + ( omega / 4 ) * ( 2*w(N,j) + ( 1 - lambda ) * w(N+1,j-1) + ( 1 + lambda ) * w(N+1,j+1) - fmat(N+1,j) );        res = w(N+1,j) - new;	    w(N+1,j) = new;		if ( abs ( res ) > res_norm ) res_norm = abs(res); end;	end;		if ( nargout > 3 ) rn(its) = res_norm; end;	if ( res_norm < TOL ) disp(its); return; end;end; 	   