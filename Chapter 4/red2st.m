function [a, b, V] = red2st ( A )%RED2ST         perform similarity transformations to reduce the symmetric%               matrix A to symmetric tridiagonal form%%     calling sequences:%             [a, b, V] = red2st ( A )%             [a, b] = red2st ( A )%             red2st ( A )%%     input:%             A       square symmetric matrix to be reduced to symmetric%                     tridiagonal form%%     outputs:%             a       vector containing elements along the main diagonal%                     of the symmetric tridiagonal form of A%             b       vector containing elements along the off diagonal%                     of the symmetric tridiagonal form of A%             V       optional output argument%                     matrix containing eigenvector information for the%                     matrix A%[nrow ncol] = size ( A );if ( nrow ~= ncol )   disp ( 'red2st error: square matrix required' );   return;end;n = nrow;if ( nargout >= 3 ) V = eye(n); end;for i = 1 : n-2    w = zeros ( n, 1 );	x = A(:,n-i+1);	alpha = norm ( x(1:n-i) );	if ( x(n-i) > 0 ) alpha = -alpha; end;	if ( alpha ~= 0 )	   w(n-i) = sqrt ( (1/2) * ( 1 - x(n-i)/alpha ) );	   w(1:n-i-1) = -(1/2) * x(1:n-i-1) / ( alpha * w(n-i) );       u = A * w;	   K = dot ( w, u );	   q = u - K * w;	   A = A - 2*w*q' - 2*q*w';	   if ( nargout >= 3 ) V = V - 2*V*w*w';  V; end;		end;end;a = diag(A);b = zeros ( n, 1 );for i = 2:n b(i) = A(i,i-1); end;