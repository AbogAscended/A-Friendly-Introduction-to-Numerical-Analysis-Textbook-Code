function x = steepest ( A, b, x, TOL, Nmax )n = length ( b );[r c] = size ( A );if ( c ~= n )    disp ( 'matrix dimensions and vector dimension not compatible' )   returnend;if ( nargout == 0 )   s = sprintf ( '%3d \t %10f ', 0, x(1) );   for j = 2 : n 	   s = sprintf ( '%s%10f ', s, x(j) );   end;   disp ( s );end;r = A * x - b;for its = 1 : Nmax    d = -r;    h = A * d;	lambda = -( d' * r ) / ( d' * h );	x = x + lambda * d;	r = r + lambda * h;	delta = r' * r;	    if ( nargout == 0 )	   s = sprintf ( '%3d \t %10f ', its, x(1) );	   for j = 2 : n 	       s = sprintf ( '%s%10f ', s, x(j) );	   end;	   disp ( s );	end;	if ( sqrt(delta) < TOL )	   return	end;end;disp ( 'maximum number of iterations exceeded' );	   