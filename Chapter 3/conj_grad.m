function x = conj_grad ( A, b, x, TOL, Nmax )%CONJ_GRAD    approximate the solution of the linear system Ax = b by applying%             the conjugate gradient method%%     calling sequences:%             x = conj_grad ( A, b, x, TOL, Nmax )%             conj_grad ( A, b, x, TOL, Nmax )%%     inputs:%             A       coefficient matrix for linear system - must be a%                     symmetric positive definite matrix%             b       right-hand side vector for linear system - must be%                     a column vector%             x       column vector containing initial guess for solution of %                     linear system%             TOL     convergence tolerance - applied to Euclidean norm of%                     residual vector%             NMax    maximum number of iterations to be performed%%     output:%             x       approximate solution of linear system%%     NOTE:%             if CONJ_GRAD is called with no output arguments, the %             iteration number and the current approximation to the %             solution are displayed%%             if the maximum number of iterations is exceeded, a meesage%             to this effect will be displayed and the current approximation %             will be returned in the output value%n = length ( b );[r c] = size ( A );if ( c ~= n )    disp ( 'conj_grad error: matrix dimensions and vector dimension not compatible' )   returnend;if ( nargout == 0 )   s = sprintf ( '%3d \t %10f ', 0, x(1) );   for j = 2 : n 	   s = sprintf ( '%s%10f ', s, x(j) );   end;   disp ( s );end;r = A * x - b;delta0 = r' * r;d = -r;for its = 1 : Nmax    h = A * d;	lambda = delta0 / ( d' * h );	x = x + lambda * d;	r = r + lambda * h;	delta1 = r' * r;	    if ( nargout == 0 )	   s = sprintf ( '%3d \t %10f ', its, x(1) );	   for j = 2 : n 	       s = sprintf ( '%s%10f ', s, x(j) );	   end;	   disp ( s );	end;	if ( sqrt(delta1) < TOL )	   return	else	   alpha = delta1 / delta0;	   delta0 = delta1;	   d = -r + alpha * d;	end;end;disp ( 'conj_grad error: maximum number of iterations exceeded' );	   