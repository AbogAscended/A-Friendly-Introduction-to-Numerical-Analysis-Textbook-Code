function t = romberg_fixed ( f, a, b, n )A = zeros ( n, n );for i = 1:n    A(i,1) = trap ( f, a, b, 2^(i-1) );	s = sprintf ( '%.10f', A(i,1) );	for j = 2:i	    power = 4^(j-1);		A(i,j) = ( power * A(i,j-1) - A(i-1,j-1) ) / ( power - 1 );		s = sprintf ( '%s    %.10f', s, A(i,j) );	end;	disp ( s )end;disp ( A(n,n) )(A(n,n) - A(n-1,n-1))/2^(n-1)if ( nargout == 1 )    t = Aend