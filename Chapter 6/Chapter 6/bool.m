function y = bool ( f, a, b, n )%BOOL       approximate the definite integral of an arbitrary function%           using the composite Boole's rule (i.e., the closed%           Newton-Cotes quadrature rule with n=4)%%     calling sequences:%             y = bool ( 'f', a, b, n )%             bool ( 'f', a, b, n )%%     inputs:%             f       string containing name of m-file defining integrand%             a       lower limit of integration%             b       upper limit of integration%             n       number of uniformly sized subintervals into which%                     integration interval is to be divided - must be even%                     (the resulting approximation will require n+1%                     function evaluations)%%     output:%             y       approximate value of the definite integral of f(x)%                     over the interval a < x < b%%     NOTE:%             if BOOL is called with no output arguments, the approximate %             value of the definite integral of f(x) over the interval %             a < x < b will be displayed%if ( rem(n,4) ~= 0 )   disp ( 'n must be a multiple of 4' )   returnendh = (b-a)/n;x = linspace ( a, b, n+1 );for i = 1:n+1    fx(i) = feval ( f, x(i) );endw = [ 7 zeros(1,n-1) 7 ];w(2:2:n)   = 32*ones(1,n/2);w(3:4:n-1) = 12*ones(1,n/4);w(5:4:n-3) = 14*ones(1,n/4-1);if ( nargout == 1 )    y = (2*h/45) * sum ( w .* fx );else   disp ( (2*h/45) * sum ( w .* fx ) );end