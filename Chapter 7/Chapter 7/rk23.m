function [wi, ti, count] = rk23 ( RHS, t0, x0, tf, parms )neqn = length ( x0 );hmin = parms(1);hmax = parms(2);TOL  = parms(3);ti(1) = t0;wi(1:neqn, 1) = x0';count = 0;h = hmax;i = 2;while ( t0 < tf )    k1 = h * feval ( RHS, t0, x0 );	k2 = h * feval ( RHS, t0 + 2*h/3, x0 + 2*k1/3 );	k3 = h * feval ( RHS, t0 + 2*h/3, x0 + 2*k2/3 );		R = max ( abs ( 3*k2/8 - 3*k3/8 ) / h );	q = 0.71 * ( TOL / R ) ^ (1/2);	count = count + 3; 		if ( R < TOL )       x0 = x0 + k1/4 + 3*k2/8 + 3*k3/8;%      x0 = x0 + 25*k1/216 + 1408*k3/2565 + 2197*k4/4104 - k5/5;	   t0 = t0 + h;       ti(i) = t0;       wi(1:neqn, i) = x0';	   i = i + 1;		end;		h = min ( max ( q, 0.1 ), 4.0 ) * h;	if ( h > hmax ) h = hmax; end;	if ( t0 + h > tf )	   h = tf - t0;	elseif ( h < hmin )	   disp ( 'Solution requires step size smaller than minimum' );	   return;	end;end;