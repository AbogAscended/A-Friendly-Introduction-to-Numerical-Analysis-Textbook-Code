function [w, x] = btcs_nd ( a,b, NX, t0, tf, NT, D, bc, f, source, decay )x = linspace ( a, b, NX+1 );% t = linspace ( t0, tf, NT+1 );dx = (b-a) / NX;dt = (tf-t0) / NT;lambda = D * dt / dx^2;wnew = zeros ( NX+1,1 );wold = zeros ( NX+1,1 );for i = 1 : NX+1    wold(i) = feval ( f, x(i) );end;sub   = -lambda * ones ( 1, NX );super = sub;sub(NX) = 2*sub(NX);super(1) = 2*super(1);sv = zeros ( 1, NX+1 );rhsv = zeros ( 1, NX+1 );for j = 2 : NT+1	[ alpha p q r ] = feval ( bc, t0+(j-1)*dt );		diag  = ( 1 + 2 * lambda) * ones ( 1, NX+1 ); 	for i = 1 : NX+1	    rhsv(i) = wold(i) + dt * feval ( source, x(i), t0+(j-1)*dt );		diag(i) = diag(i) + dt * feval ( decay, x(i), t0+(j-1)*dt );	end;	diag(NX+1) = diag(NX+1) + 2 * lambda * dx * p / q;	rhsv(1) = rhsv(1) + 2 * lambda * dx * alpha;	rhsv(NX+1) = rhsv(NX+1) + 2 * lambda * dx * r / q;	    wnew = tridiagonal ( sub, diag, super, rhsv );	wold = wnew;end;w = wnew;