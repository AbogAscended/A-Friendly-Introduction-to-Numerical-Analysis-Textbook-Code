function [T,C] = photo2D ( NX, NT )x = linspace ( 0, 1, NX+1 );y = linspace ( 0, 1, NX+1 );delta = 1 / NX;dt = ( 300 * 550 / 2.25e10 ) / NT;dtd2 = dt / 2;lambda = dtd2 / delta^2;k1 = 8.3e-8 * 2.8e13 * 2.25e10 / 550;k2 = 2.8e13 * 3.2e-10 * (2.25e10)^2 / 550^2;Told = zeros ( NX+1, NX+1 );Tnew = zeros ( NX+1, NX+1 );Cold = ones ( NX+1, NX+1 );Cnew = zeros ( NX+1, NX+1 );for j = 1 : NX+1    Cnew(j,1) = 1;	Cnew(j,NX+1)= 1;end;for k = 2 : NX    Cnew(1,k) = 1;	Cnew(NX+1,k) = 1;end;subx = -lambda * ones ( 1, NX-2 );superx = subx;suby = -lambda * ones ( 1, NX-2 );supery = suby;for n = 2 : NT + 1    for k = 2 : NX		rhsx(1:NX-1) = lambda * ( Told (2:NX, k-1) + Told (2:NX, k+1) );		diagx = ( 1 + 2 * lambda ) * ones ( 1, NX-1 );		for j = 2 : NX		    Cnew(j,k) = Cold(j,k) / ( 1 + dtd2 * k2 * Told(j,k) );		    sterm = (dt/2) * expose ( x(j), y(k) );		    rhsx(j-1) = rhsx(j-1) + ( 1 - 2 * lambda - (dt/4) * k1 * Cold(j,k) ) * Told(j, k) + sterm;		    diagx(j-1) = diagx(j-1) + (dt/4) * k1 * Cnew(j,k);		end;		Tnew(2:NX,k) = tridiagonal ( subx, diagx, superx, rhsx )';	end;		for j = 2 : NX		rhsy(1:NX-1) = lambda * ( Tnew (j-1, 2:NX) + Tnew (j+1, 2:NX) );		diagy = ( 1 + 2 * lambda ) * ones ( 1, NX-1 );		for k = 2 : NX		    Cold(j,k) = Cnew(j,k) / ( 1 + dtd2 * k2 * Tnew(j,k) );		    sterm = (dt/2) * expose ( x(j), y(k) );		    rhsy(k-1) = rhsy(k-1) + ( 1 - 2 * lambda - (dt/4) * k1 * Cnew(j,k) ) * Tnew(j, k) + sterm;			diagy(k-1) = diagy(k-1) + (dt/4) * k1 * Cold(j,k);		end;		Told(j,2:NX) = tridiagonal ( suby, diagy, supery, rhsy );	end;	end;T = Told;C = Cold;function e = expose ( x, y )if ( ( 0.375 <= x ) & ( x <= 0.625 ) & ( 0.375 <= y ) & ( y <= 0.625 ) )   if ( ( 0.4 <= x ) & ( x <= 0.5 ) & (0.5 <= y ) & ( y <= 0.6 ) )      e = 0;   else      e = 1;   end;else   e = 0;end;%if ( ( 0.2 <= x ) & ( x <= 0.9 ) )%   if ( ( x <= 0.3 ) & ( 0.3 <= y ) & ( y <= 0.85 ) )%      e = 1;%   elseif ( ( x <= 0.75 ) & ( 0.78 <= y ) & ( y <= 0.85 ) )%      e = 1;%   elseif ( ( 0.7 <= x ) & ( x <= 0.8 ) & ( 0.15 <= y ) & ( y <= 0.25 ) )%      e = 1;%   elseif ( ( x >= 0.3 ) & ( y <= x - 0.2 ) & ( y >= (2/3)*x - 0.1 ) )%      e = 1;%   else%      e = 0;%   end;%else%   e = 0;%end;