function [x, u] = moc1dt ( t0, tf, NT, a, g )h = ( tf - t0 ) / NT;t = linspace ( t0, tf, NT+1 );x = zeros ( NT+1, NT+1 );u = zeros ( NT+1, NT+1 );for i = 1 : NT+1    u(i,i) = ic ( t(i) );end;for i = 1 : NT    for j = i : NT	    k11 = h * feval ( a, t(j), x(i,j), u(i,j) );		k21 = h * feval ( g, t(j), x(i,j), u(i,j) );				k12 = h * feval ( a, t(j)+h/2, x(i,j)+k11/2, u(i,j)+k21/2 );		k22 = h * feval ( g, t(j)+h/2, x(i,j)+k11/2, u(i,j)+k21/2 );						k13 = h * feval ( a, t(j)+h/2, x(i,j)+k12/2, u(i,j)+k22/2 );		k23 = h * feval ( g, t(j)+h/2, x(i,j)+k12/2, u(i,j)+k22/2 );						k14 = h * feval ( a, t(j)+h, x(i,j)+k13, u(i,j)+k23 );		k24 = h * feval ( g, t(j)+h, x(i,j)+k13, u(i,j)+k23 );				x(i,j+1) = x(i,j) + ( k11 + 2*k12 + 2*k13 + k14 ) / 6;		u(i,j+1) = u(i,j) + ( k21 + 2*k22 + 2*k23 + k24 ) / 6;	end;end;function y = ic ( x )if ( ( 0 <= x ) & ( x <= 1 ) )   y = 1 - cos(2*pi*x);else   y = 0;end;