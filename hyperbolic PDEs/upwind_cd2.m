function w = upwind_cd2 ( a, b, NX, t0, tf, NT, D, f, dfdc )x = linspace ( a, b, NX+1 );dx = ( b - a ) / NX;t = linspace ( t0, tf, NT+1 );dt = ( tf - t0 ) / NT;mu = D * dt / dx^2;wold = zeros ( 1, NX+1 );wnew = zeros ( 1, NX+1 );u = zeros ( 1, NX+1 );for j = 1 : NX+1    wold(j) = ic ( x(j) );end;for n = 1 : NT    for j = 2 : NX	    if ( feval ( dfdc, wold(j) ) >= 0 )	       wnew(j) = wold(j) + (dt/dx) * ( feval ( f, wold(j-1) ) - feval ( f, wold(j) ) ) + mu * ( wold(j+1) - 2 * wold(j) + wold(j-1) );		else		   wnew(j) = wold(j) + (dt/dx) * ( feval ( f, wold(j) ) - feval ( f, wold(j+1) ) ) + mu * ( wold(j+1) - 2 * wold(j) + wold(j-1) );		end;	end;	wold(2:NX) = wnew(2:NX);end;w = wold;function y = ic ( x )if ( ( 0 <= x ) & ( x <= 1) )   y = 1 - cos(2*pi*x);else   y = 0;end;%if ( ( x <= -1 ) )%   y = 40;%elseif ( x < 1 )%   y = 100 + 60*cos(pi*x);%else%   y = 40;%end;