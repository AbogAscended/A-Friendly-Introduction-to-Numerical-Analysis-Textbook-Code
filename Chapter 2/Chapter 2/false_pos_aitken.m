function y = false_pos_aitken ( f, a, b, TOL, Nmax )%FALSE_POS_AITKEN   uses method of false position (regula falsi) with Aitken %                   extrapolation to locate the root of a nonlinear function%%     calling sequences:%             y = false_pos_aitken ( 'f', a, b, TOL, Nmax )%             false_pos_aitken ( 'f', a, b, TOL, Nmax )%%     inputs:%             f       string containing name of m-file defining function%                     whose root is to be located%             a,b     left and right endpoints, respectively, of interval%                     known to contain root of f%             TOL     absolute error convergence tolerance%                     (applied to extrapolated sequence of approximations)%             Nmax    maximum number of iterations to be performed%%     output:%             y       approximate value of root%%     NOTE:%             if FALSE_POS_AITKEN is called with no output arguments, %             the iteration number, the current false position%             approximation to the root and the current extrapolated%             approximation to the root are displayed.%%             if the maximum number of iterations is exceeded, a message%             to this effect will be displayed and the most recent%             approximation will be returned in the output value%old = b;   phatold = b;fa = feval(f,a);fb = feval(f,b);for i = 1 : Nmax	new = b - fb * ( b - a ) / ( fb - fa );	fnew = feval(f,new);		if ( i == 1 | i == 2 )	   if ( nargout == 0 ) 	      disp ( sprintf ( '\t\t %3d \t %.10f \n', i, new ) )	   end	else	   phat = new - ( new - old ) ^ 2 / ( new - 2 * old + older );	   	   if ( nargout == 0 )	      disp ( sprintf ( '\t\t %3d \t %.10f \t %.10f \n', i, new, phat ) )	   end	   	   if ( abs(phat-phatold) < TOL )	   	  if ( nargout == 1 )	         y = phat;	      end	      return	   else	   	  phatold = phat;       end	end	    if ( fa * fnew < 0 )	   b = new; fb = fnew;	else	   a = new; fa = fnew;	end	older = old;   old = new;	enddisp('Maximum number of iterations exceeded')if ( nargout == 1 ) y = phat; end