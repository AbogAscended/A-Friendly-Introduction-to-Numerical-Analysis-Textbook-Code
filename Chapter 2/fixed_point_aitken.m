function y = fixed_point_aitken ( f, x0, TOL, Nmax )%FIXED_POINT_AITKEN   uses general fixed point iteration with Aitken %                     extrapolation to locate the root of a nonlinear function%%     calling sequences:%             y = fixed_point_aitken ( 'g', x0, TOL, Nmax )%             fixed_point_aitken ( 'g', x0, TOL, Nmax )%%     inputs:%             g       string containing name of m-file defining the%                     iteration function%             x0      initial approximation to location of fixed point%             TOL     absolute error convergence tolerance%                     (applied to extrapolated sequence of approximations)%             Nmax    maximum number of iterations to be performed%%     output:%             y       approximate value of fixed point%%     NOTE:%             if FIXED_POINT_AITKEN is called with no output arguments, %             the iteration number, the current functional iteration%             approximation to the fixed point and the current extrapolated%             approximation to the fixed point are displayed.%%             if the maximum number of iterations is exceeded, a message%             to this effect will be displayed and the most recent%             approximation will be returned in the output value%old = x0;   phatold = x0;for i = 1 : Nmax    new = feval(f,old);		if ( i == 1 | i == 2 )	   if ( nargout == 0 )	      disp ( sprintf ( '\t\t %3d \t %.9f \n', i, new ) )	   end	else	   phat = new - ( new - old ) ^ 2 / ( new - 2 * old + older );	   	   if ( nargout == 0 )	      disp ( sprintf ( '\t\t %3d \t %.9f \t %.9f \n', i, new, phat ) )	   end	   	   if ( abs(phat-phatold) < TOL )	      if ( nargout == 1 )		     y = phat;		  end	      return	   else	      phatold = phat;	   end	end	    older = old;	old = new;enddisp('Maximum number of iterations exceeded')if ( nargout == 1 ) y = phat; end